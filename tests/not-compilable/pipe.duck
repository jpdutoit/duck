extern function operator+(float, float) -> float;

module A {
  input: float;
  output: float;
}

v: A;
float >> v;
v >> float;
v >> v;
v >> v + 20;
"hello" >> v;

extern function a(mono) -> mono;

extern function b(mono) -> mono;
extern function b(mono) -> mono;

extern function c(mono, mono) -> mono;

extern function d(mono, mono) -> mono;
extern function d(mono, mono, mono) -> mono;


A >> a >> A;
A >> b >> A;
A >> c >> A;
A >> d >> A;

A >> a >> a >> A >> a >> a >> A;
A >> a >> a >> a >> A >> a >> A;

/*
OUTPUT:
---
tests/not-compilable/pipe.duck(9:1-5): Error: Cannot coerce type number to a value of type number
tests/not-compilable/pipe.duck(10:1): Error: Cannot coerce a value of type number to type number
tests/not-compilable/pipe.duck(12:6-11): Error: Right hand side of connection must be a module field
tests/not-compilable/pipe.duck(13:1-7): Error: Cannot coerce a value of type string to a value of type number
tests/not-compilable/pipe.duck(27:6): Error: Multiple functions matches arguments:
tests/not-compilable/pipe.duck(17:8-31):   function b(mono) -> mono
tests/not-compilable/pipe.duck(18:8-31):   function b(mono) -> mono
tests/not-compilable/pipe.duck(28:6): Error: Function does not match arguments:
tests/not-compilable/pipe.duck(20:8-37):   function c(mono, mono) -> mono
tests/not-compilable/pipe.duck(29:6): Error: No function matches arguments:
tests/not-compilable/pipe.duck(22:8-37):   function d(mono, mono) -> mono
tests/not-compilable/pipe.duck(23:8-43):   function d(mono, mono, mono) -> mono
---
*/
