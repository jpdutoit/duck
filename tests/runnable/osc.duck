extern struct frequency {
  constructor(float);
}
extern SAMPLE_RATE: frequency;

function hz(amount: float) -> frequency(amount);
extern function operator+(float, float) -> float;
extern function sin(float) -> float;
extern function operator/(frequency, frequency) -> float;
extern function operator%(float, float) -> float;
extern function operator*(float, float) -> float;

module Phasor {
  freq: frequency = 440 hz;
  phase: mono = 0;
  output: mono = 0;
  input: freq;

  function tick() {
    output = phase;
    phase = (phase + (input / SAMPLE_RATE)) % 1.0;
  }
}

module SinOsc {
  phasor: Phasor;
  freq: this.phasor.freq;
  input: this.phasor.input;
  output: mono;

  function tick() {
    output = sin(phasor * 2 * 3.141592);
  }
}
